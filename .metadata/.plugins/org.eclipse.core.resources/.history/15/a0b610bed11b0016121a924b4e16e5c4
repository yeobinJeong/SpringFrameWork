package com.mvcdemoweb.controller;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Locale;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.demoweb.controller.ActionResult;
import com.mvcdemoweb.common.Util;
import com.mvcdemoweb.model.dao.MemberDao;
import com.mvcdemoweb.model.dto.Member;

/**
 * Handles requests for the application home page.
 */
@Controller
public class MemberController {
	
	private static final Logger logger = LoggerFactory.getLogger(MemberController.class);
	
	/**
	 * Simply selects the home view to render by returning its name.
	 */
	
	private MemberDao dao;
	
	@Autowired
	@Qualifier(value ="oracleMemberDao")
	public void setMemberDao(MemberDao dao){
		this.dao = dao;
	}
	
	
	@RequestMapping(value = "member/list.action", method = RequestMethod.GET)
	public String list(Locale locale, Model model, HttpSession session, HttpServletRequest req) {
//		ActionResult result = new ActionResult();
		
		//로그인 체크 -> 로그인 되지 않은 사용자는 로그인 서블릿으로 이동
		req.getSession(true);
		if (session.getAttribute("loginuser") == null) {
			return "redirect:account/loginform";
		}
		
		//사용자 목록 데이터 조회
		//MemberDao dao = new MemberDao();
		ArrayList<Member> members = dao.getList();
		
		
		model.addAttribute("members", members);
		//view (.jsp)에서 사용하도록 request객체에 저장
		//->forward로 이동하기 때문에 request객체에 담으면 jsp에서 읽을 수 있습니다.
		/*request.setAttribute("members", members);
		
		result.setUrl("membermanager/list.jsp");
		result.setRedirect(false);*/
		
		return "member/list";
	}
	
	@RequestMapping(value = "member/view.action", method = RequestMethod.POST)
	public String view(Locale locale, Model model, HttpServletRequest req, HttpServletResponse resp,
			String passwd, String memberId, HttpSession session) throws IOException {
		//요청 데이터 읽기
		
		 		
				passwd = Util.getHashedString(passwd, "SHA-256");
				Member member = dao.getMemberByIdAndPasswd(memberId, passwd);
				
				if (member == null) {
					//실패 했을시에는 forward 방식으로 보냄
					System.out.println("실패");
					return "account/loginform";
					
				} else {
					//성공했을 시에는 redirect
					session.setAttribute("loginuser", member);
					return "redirect:/home.action";
				}
				
	}
	
	@RequestMapping(value = "member/register.action", method = RequestMethod.GET)
	public String registerform(HttpSession session) {
		
		session.removeAttribute("loginuser");
		return "redirect:/home.action";
	}
	
	@RequestMapping(value = "member/register.action", method = RequestMethod.POST)
	public String register(HttpSession session) {
		
		session.removeAttribute("loginuser");
		return "redirect:/home.action";
	}
	
	
}
