package com.mvcdemoweb.model.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import org.springframework.jdbc.core.RowMapper;
import org.springframework.jdbc.core.support.JdbcDaoSupport;
import org.springframework.stereotype.Repository;

import com.mvcdemoweb.model.dto.Upload;
import com.mvcdemoweb.model.dto.UploadFile;

@Repository(value = "oracleUploadDao")
public class OracleUploadDao2 extends JdbcDaoSupport implements UploadDao {

	
	
	public int insertUpload(Upload upload) {

		String sql = "INSERT INTO upload " + "(uploadno, title, uploader, content) "
				+ "VALUES (upload_sequence.nextVal, ?, ?, ?)";
		
		List<Upload> u = getJdbcTemplate().query(sql, new RowMapper<upload>(){
			public Upload mapRow(ResultSet rs, int index) throws SQLException{
				Upload tempu = new Upload();
				
				
				
				return tempu;
			}
		});
		
		int uploadNumber;
		
		return -1;
	}

	public void insertUploadFile(UploadFile file) {

		Connection conn = null;
		PreparedStatement pstmt = null;

		try {
			conn = ConnectionHelper.getConnection("oracle");

			String sql = "INSERT INTO uploadfile " + "(uploadfileno, uploadno, savedfilename, userfilename) "
					+ "VALUES (uploadfile_sequence.nextVal, ?, ?, ?)";
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, file.getUploadNo());
			pstmt.setString(2, file.getSavedFileName());
			pstmt.setString(3, file.getUserFileName());
			pstmt.executeUpdate();

		} catch (Exception ex) {
			ex.printStackTrace();
		} finally {
			try {
				pstmt.close();
			} catch (Exception ex) {
			}
			try {
				conn.close();
			} catch (Exception ex) {
			}
		}

	}

	public ArrayList<Upload> getUploadList() {

		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		ArrayList<Upload> uploads = new ArrayList<Upload>();

		try {
			conn = ConnectionHelper.getConnection("oracle");

			String sql = "SELECT uploadno, title, regdate from upload where deleted = '0'";
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			while (rs.next()) {
				Upload upload = new Upload();
				upload.setUploadNo(rs.getInt(1));
				upload.setTitle(rs.getString(2));
				upload.setRegDate(rs.getDate(3));
				uploads.add(upload);
			}

		} catch (Exception ex) {
			ex.printStackTrace();
		} finally {
			try {
				rs.close();
			} catch (Exception ex) {
			}
			try {
				pstmt.close();
			} catch (Exception ex) {
			}
			try {
				conn.close();
			} catch (Exception ex) {
			}
		}

		return uploads;

	}

	public Upload getUploadByUploadNo(int uploadNo) {
		Connection conn = null;
		PreparedStatement pstmt = null, pstmt2 = null;
		;
		ResultSet rs = null, rs2 = null;
		Upload upload = null;

		try {
			conn = ConnectionHelper.getConnection("oracle");

			String sql = "SELECT uploadno,title,uploader, " + "content, regdate " + "FROM upload "
					+ "WHERE uploadno = ? AND deleted = '0'";
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, uploadNo);
			rs = pstmt.executeQuery();
			if (rs.next()) {
				upload = new Upload();
				upload.setUploadNo(uploadNo);
				upload.setTitle(rs.getString(2));
				upload.setUploader(rs.getString(3));
				upload.setContent(rs.getString(4));
				upload.setRegDate(rs.getDate(5));

				sql = "SELECT uploadfileno, uploadno, savedfilename, userfilename, downloadcount "
						+ "FROM uploadfile WHERE uploadno = ?";
				pstmt2 = conn.prepareStatement(sql);
				pstmt2.setInt(1, uploadNo);
				rs2 = pstmt2.executeQuery();
				ArrayList<UploadFile> files = new ArrayList<UploadFile>();
				while (rs2.next()) {
					UploadFile file = new UploadFile();
					file.setUploadFileNo(rs2.getInt(1));
					file.setUploadNo(rs2.getInt(2));
					file.setSavedFileName(rs2.getString(3));
					file.setUserFileName(rs2.getString(4));
					file.setDownloadCount(rs2.getInt(5));
					files.add(file);
				}
				upload.setFiles(files);
			}
		} catch (Exception ex) {
			ex.printStackTrace();
		} finally {
			try {
				rs2.close();
			} catch (Exception ex) {
			}
			try {
				rs.close();
			} catch (Exception ex) {
			}
			try {
				pstmt2.close();
			} catch (Exception ex) {
			}
			try {
				pstmt.close();
			} catch (Exception ex) {
			}
			try {
				conn.close();
			} catch (Exception ex) {
			}
		}
		return upload;

	}

	public ArrayList<UploadFile> getUploadFilesByUploadNo(int uploadNo) {
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		ArrayList<UploadFile> files = new ArrayList<UploadFile>();

		try {
			conn = ConnectionHelper.getConnection("oracle");

			String sql = "SELECT uploadfileno, uploadno, savedfilename, userfilename "
					+ "FROM uploadfile WHERE uploadfileno = ?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, uploadNo);
			rs = pstmt.executeQuery();

			while (rs.next()) {
				UploadFile file = new UploadFile();
				file.setUploadFileNo(rs.getInt(1));
				file.setUploadNo(rs.getInt(2));
				file.setSavedFileName(rs.getString(3));
				file.setUserFileName(rs.getString(4));
				files.add(file);
			}
		} catch (Exception ex) {
			ex.printStackTrace();
		} finally {
			try {
				rs.close();
			} catch (Exception ex) {
			}
			try {
				pstmt.close();
			} catch (Exception ex) {
			}
			try {
				conn.close();
			} catch (Exception ex) {
			}
		}
		return files;

	}

	public UploadFile getUploadFileByUploadFileNo(int uploadFileNo) {
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		UploadFile file = null;

		try {
			conn = ConnectionHelper.getConnection("oracle");

			String sql = "SELECT uploadfileno, uploadno, savedfilename, userfilename "
					+ "FROM uploadfile WHERE uploadfileno = ?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, uploadFileNo);
			rs = pstmt.executeQuery();

			if (rs.next()) {
				file = new UploadFile();
				file.setUploadFileNo(rs.getInt(1));
				file.setUploadNo(rs.getInt(2));
				file.setSavedFileName(rs.getString(3));
				file.setUserFileName(rs.getString(4));

			}
		} catch (Exception ex) {
			ex.printStackTrace();
		} finally {
			try {
				rs.close();
			} catch (Exception ex) {
			}
			try {
				pstmt.close();
			} catch (Exception ex) {
			}
			try {
				conn.close();
			} catch (Exception ex) {
			}
		}
		return file;

	}

	public void increaseUploadReadCount(int uploadNo) {

		Connection conn = null;
		PreparedStatement pstmt = null;

		try {
			conn = ConnectionHelper.getConnection("oracle");

			String sql = "UPDATE upload " + "SET readcount = readcount + 1 " + "WHERE uploadno = ?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, uploadNo);
			pstmt.executeUpdate();

		} catch (Exception ex) {
			ex.printStackTrace();
		} finally {
			try {
				pstmt.close();
			} catch (Exception ex) {
			}
			try {
				conn.close();
			} catch (Exception ex) {
			}
		}

	}

	public void increaseUploadFileDownloadCount(int uploadFileNo) {

		Connection conn = null;
		PreparedStatement pstmt = null;

		try {
			conn = ConnectionHelper.getConnection("oracle");

			String sql = "UPDATE uploadfile " + "SET downloadcount = downloadcount + 1 " + "WHERE uploadfileno = ?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, uploadFileNo);
			pstmt.executeUpdate();

		} catch (Exception ex) {
			ex.printStackTrace();
		} finally {
			try {
				pstmt.close();
			} catch (Exception ex) {
			}
			try {
				conn.close();
			} catch (Exception ex) {
			}
		}

	}

}
