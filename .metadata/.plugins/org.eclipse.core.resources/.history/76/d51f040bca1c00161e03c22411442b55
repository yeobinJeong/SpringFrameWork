package com.example.springmvc4;

import java.io.FileOutputStream;
import java.io.InputStream;
import java.util.Date;

import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;


@Controller
@RequestMapping(value="/")
public class DemoController {

   @RequestMapping(value="simplecustomview2.action", method=RequestMethod.GET)
   @ResponseBody //return 값은 ViewName이 아니고 응답컨텐츠 입니다.
   public String simpleCustomView2(HttpServletResponse resp){
      
      resp.setContentType("text/plain;charset=utf-8");
      StringBuilder content = new StringBuilder(256);
      content.append("hello\r\n");
      content.append("Data from controller : " +new Date());
      
      return content.toString();
   }
   
   @RequestMapping(value="pdfview.action", method=RequestMethod.GET)
   public ModelAndView pdfView(){
      ModelAndView mav = new ModelAndView();
      mav.setView(new PdfView());
      return mav;
   }
   
   @RequestMapping(value="excelview.action", method=RequestMethod.GET)
   public ModelAndView excelView(){
      ModelAndView mav = new ModelAndView();
      mav.setView(new ExcelView());
      return mav;
   }
   
   @RequestMapping(value="/upload.action", method=RequestMethod.POST)
   public String upload(MultipartHttpServletRequest req){//파일 업로드를 포함하는 Request
      
      String path=req.getSession().getServletContext().getRealPath("/WEB-INF/upload/");
      
      MultipartFile file = req.getFile("file1");//file-data
      if(file !=null && file.getSize() > 0){
      
         try {
            FileOutputStream ostream = 
               new FileOutputStream(path + "/" + file.getOriginalFilename());
            InputStream istream = file.getInputStream();
            byte[] buffer = new byte[512];
            while (true) {
               int count = istream.read(buffer, 0, buffer.length);
               if (count == -1) break;
               ostream.write(buffer, 0, count);
            }            
            istream.close();
            ostream.close();
         } catch (Exception ex) {}   
      }
      String data=req.getParameter("data");//form-data
      System.out.println("data :" + data);
      
      return "redirect:/";
   }
   
   @RequestMapping(value="download.action", method=RequestMethod.GET)
   public ModelAndView download(){
      
      ModelAndView mav= new ModelAndView();
      mav.setView(new DownloadView());
      return mav;
   }
}